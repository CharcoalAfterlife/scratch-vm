{
    "variables": {
        "_text": [
            "_text",
            ""
        ],
        "_replacers": [
            "_replacers",
            "[]"
        ],
        "_replacer": [
            "_replacer",
            1
        ],
        "_rep": [
            "_rep",
            ""
        ]
    },
    "blocks": {
        "set replacer %s to %s definition": {
            "opcode": "procedures_definition",
            "next": "?3c)h~L3Pf]NkoQ=LLI|",
            "parent": null,
            "inputs": {
                "custom_block": [
                    1,
                    "f9@9Kn]g^c1/AIC(#ALe"
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": true,
            "x": 48,
            "y": 64,
            "comment": "set replacers comment"
        },
        "set replacer %s to %s display": {
            "opcode": "procedures_prototype",
            "next": null,
            "parent": "set replacer %s to %s definition",
            "inputs": {
                "REPLACER": [
                    1,
                    "set replacer argument REPLACER"
                ],
                "VALUE": [
                    1,
                    "set replacer argument VALUE"
                ]
            },
            "fields": {},
            "shadow": true,
            "topLevel": false,
            "mutation": {
                "tagName": "mutation",
                "children": [],
                "proccode": "replacer %s to %s",
                "argumentids": "[\"REPLACER\",\"VALUE\"]",
                "argumentnames": "[\"REPLACER\",\"VALUE\"]",
                "argumentdefaults": "[\"\",\"\",\"\"]",
                "warp": "true",
                "returns": "false",
                "edited": "true"
            }
        },
        "set replacer argument REPLACER": {
            "opcode": "argument_reporter_string_number",
            "next": null,
            "parent": "REPLACER",
            "inputs": {},
            "fields": {
                "VALUE": [
                    "REPLACER",
                    "REPLACER"
                ]
            },
            "shadow": true,
            "topLevel": false
        },
        "set replacer argument VALUE": {
            "opcode": "argument_reporter_string_number",
            "next": null,
            "parent": "VALUE",
            "inputs": {},
            "fields": {
                "VALUE": [
                    "VALUE",
                    "VALUE"
                ]
            },
            "shadow": true,
            "topLevel": false
        },
        "set replacers var to replacer json": {
            "opcode": "data_setvariableto",
            "next": null,
            "parent": "set replacer %s to %s definition",
            "inputs": {
                "VALUE": [
                    3,
                    "set replacer value to",
                    [
                        10,
                        "0"
                    ]
                ]
            },
            "fields": {
                "VARIABLE": [
                    "replacers",
                    "replacers"
                ]
            },
            "shadow": false,
            "topLevel": false
        },
        "set replacer value to": {
            "opcode": "jgJSON_setValueToKeyInJSON",
            "next": null,
            "parent": "set replacers var to replacer json",
            "inputs": {
                "KEY": [
                    3,
                    "left and midle half",
                    [
                        10,
                        "key"
                    ]
                ],
                "VALUE": [
                    3,
                    "VALUE",
                    [
                        10,
                        "value"
                    ]
                ],
                "JSON": [
                    3,
                    [
                        12,
                        "replacers",
                        "replacers"
                    ],
                    [
                        10,
                        "{}"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        },
        "REPLACER": {
            "opcode": "argument_reporter_string_number",
            "next": null,
            "parent": "righ half",
            "inputs": {},
            "fields": {
                "VALUE": [
                    "REPLACER",
                    "REPLACER"
                ]
            },
            "shadow": false,
            "topLevel": false
        },
        "VALUE": {
            "opcode": "argument_reporter_string_number",
            "next": null,
            "parent": "set replacer value to",
            "inputs": {},
            "fields": {
                "VALUE": [
                    "VALUE",
                    "VALUE"
                ]
            },
            "shadow": false,
            "topLevel": false
        },
        "replace with replacers definition": {
            "opcode": "procedures_definition_return",
            "next": "define temp replacers list",
            "parent": null,
            "inputs": {
                "custom_block": [
                    1,
                    "replace with replacers display"
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": true,
            "x": 48,
            "y": 280,
            "comment": "replace replacers comment"
        },
        "replace with replacers display": {
            "opcode": "procedures_prototype",
            "next": null,
            "parent": "replace with replacers definition",
            "inputs": {
                "STRING": [
                    1,
                    "STRING"
                ]
            },
            "fields": {},
            "shadow": true,
            "topLevel": false,
            "mutation": {
                "tagName": "mutation",
                "children": [],
                "proccode": "replace %s with replacers",
                "argumentids": "[\"STRING\"]",
                "argumentnames": "[\"STRING\"]",
                "argumentdefaults": "[\"\"]",
                "warp": "false",
                "returns": "true",
                "edited": "true"
            }
        },
        "STRING": {
            "opcode": "argument_reporter_string_number",
            "next": null,
            "parent": "replace with replacers display",
            "inputs": {},
            "fields": {
                "VALUE": [
                    "STRING",
                    "STRING"
                ]
            },
            "shadow": true,
            "topLevel": false
        },
        "run through each replacer": {
            "opcode": "control_for_each",
            "next": "return the finnal text",
            "parent": "define temp text",
            "inputs": {
                "VALUE": [
                    3,
                    "the number of replacers",
                    [
                        6,
                        "10"
                    ]
                ],
                "SUBSTACK": [
                    2,
                    "define temp replacer name"
                ]
            },
            "fields": {
                "VARIABLE": [
                    "_replacer",
                    "_replacer"
                ]
            },
            "shadow": false,
            "topLevel": false
        },
        "define temp replacers list": {
            "opcode": "data_setvariableto",
            "next": "define temp text",
            "parent": "replace with replacers definition",
            "inputs": {
                "VALUE": [
                    3,
                    "get all replacers",
                    [
                        10,
                        "0"
                    ]
                ]
            },
            "fields": {
                "VARIABLE": [
                    "_replacers",
                    "_replacers"
                ]
            },
            "shadow": false,
            "topLevel": false
        },
        "get all replacers": {
            "opcode": "jgJSON_json_keys",
            "next": null,
            "parent": "define temp replacers list",
            "inputs": {
                "json": [
                    3,
                    [
                        12,
                        "replacers",
                        "replacers"
                    ],
                    [
                        10,
                        "{}"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        },
        "righ half": {
            "opcode": "operator_join",
            "next": null,
            "parent": "left and midle half",
            "inputs": {
                "STRING1": [
                    1,
                    [
                        10,
                        "{"
                    ]
                ],
                "STRING2": [
                    3,
                    "REPLACER",
                    [
                        10,
                        "banana"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        },
        "left and midle half": {
            "opcode": "operator_join",
            "next": null,
            "parent": "set replacer value to",
            "inputs": {
                "STRING1": [
                    3,
                    "righ half",
                    [
                        10,
                        "foo"
                    ]
                ],
                "STRING2": [
                    1,
                    [
                        10,
                        "}"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        },
        "the number of replacers": {
            "opcode": "jgJSON_json_array_length",
            "next": null,
            "parent": "run through each replacer",
            "inputs": {
                "array": [
                    3,
                    [
                        12,
                        "_replacers",
                        "_replacers"
                    ],
                    [
                        10,
                        "[]"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        },
        "get current replacer": {
            "opcode": "jgJSON_json_array_get",
            "next": null,
            "parent": "define temp replacer name",
            "inputs": {
                "array": [
                    3,
                    [
                        12,
                        "_replacers",
                        "_replacers"
                    ],
                    [
                        10,
                        "[\"A\", \"B\", \"C\"]"
                    ]
                ],
                "index": [
                    3,
                    "offset index by -1",
                    [
                        4,
                        "2"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        },
        "replace all replacers with value": {
            "opcode": "operator_replaceAll",
            "next": null,
            "parent": "replace text with this replacer",
            "inputs": {
                "text": [
                    3,
                    [
                        12,
                        "_text",
                        "_text"
                    ],
                    [
                        10,
                        "foo bar"
                    ]
                ],
                "term": [
                    3,
                    [
                        12,
                        "_rep",
                        "_rep"
                    ],
                    [
                        10,
                        "foo"
                    ]
                ],
                "res": [
                    3,
                    "get replacer value from replacer list",
                    [
                        10,
                        "bar"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        },
        "define temp replacer name": {
            "opcode": "data_setvariableto",
            "next": "replace text with this replacer",
            "parent": "run through each replacer",
            "inputs": {
                "VALUE": [
                    3,
                    "get current replacer",
                    [
                        10,
                        "0"
                    ]
                ]
            },
            "fields": {
                "VARIABLE": [
                    "_rep",
                    "_rep"
                ]
            },
            "shadow": false,
            "topLevel": false
        },
        "get replacer value from replacer list": {
            "opcode": "jgJSON_getValueFromJSON",
            "next": null,
            "parent": "replace all replacers with value",
            "inputs": {
                "VALUE": [
                    3,
                    [
                        12,
                        "_rep",
                        "_rep"
                    ],
                    [
                        10,
                        "key"
                    ]
                ],
                "JSON": [
                    3,
                    [
                        12,
                        "replacers",
                        "replacers"
                    ],
                    [
                        10,
                        "{\"key\": \"value\"}"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        },
        "define temp text": {
            "opcode": "data_setvariableto",
            "next": "run through each replacer",
            "parent": "define temp replacers list",
            "inputs": {
                "VALUE": [
                    3,
                    "STRING argument",
                    [
                        10,
                        "0"
                    ]
                ]
            },
            "fields": {
                "VARIABLE": [
                    "_text",
                    "_text"
                ]
            },
            "shadow": false,
            "topLevel": false
        },
        "STRING argument": {
            "opcode": "argument_reporter_string_number",
            "next": null,
            "parent": "define temp text",
            "inputs": {},
            "fields": {
                "VALUE": [
                    "STRING",
                    "STRING"
                ]
            },
            "shadow": false,
            "topLevel": false
        },
        "replace text with this replacer": {
            "opcode": "data_setvariableto",
            "next": null,
            "parent": "define temp replacer name",
            "inputs": {
                "VALUE": [
                    3,
                    "replace all replacers with value",
                    [
                        10,
                        "0"
                    ]
                ]
            },
            "fields": {
                "VARIABLE": [
                    "_text",
                    "_text"
                ]
            },
            "shadow": false,
            "topLevel": false
        },
        "return the finnal text": {
            "opcode": "procedures_return",
            "next": null,
            "parent": "run through each replacer",
            "inputs": {
                "return": [
                    3,
                    [
                        12,
                        "_text",
                        "_text"
                    ],
                    [
                        10,
                        "1"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        },
        "offset index by -1": {
            "opcode": "operator_subtract",
            "next": null,
            "parent": "get current replacer",
            "inputs": {
                "NUM1": [
                    3,
                    [
                        12,
                        "_replacer",
                        "_replacer"
                    ],
                    [
                        4,
                        ""
                    ]
                ],
                "NUM2": [
                    1,
                    [
                        4,
                        "1"
                    ]
                ]
            },
            "fields": {},
            "shadow": false,
            "topLevel": false
        }
    },
    "comments": {
        "set replacers comment": {
            "blockId": "set replacer %s to %s definition",
            "x": 420.74074074074076,
            "y": 78.51851851851852,
            "width": 200,
            "height": 200,
            "minimized": true,
            "text": "Sets a replacer to a value\n\nthis was created as a patch to remove unite"
        },
        "replace replacers comment": {
            "blockId": "replace with replacers definition",
            "x": 419.68620088365344,
            "y": 300,
            "width": 200,
            "height": 200,
            "minimized": true,
            "text": "Replaces all replacer names with their respective value\n\nthis was created as a patch to remove unite"
        }
    }
}